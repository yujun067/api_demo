version: "3.8"

# Common environment variables for all services
x-common-env: &common-env
  REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
  DATABASE_URL: sqlite:////app/data/hacker_news.db
  CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
  CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
  LOG_LEVEL: ${LOG_LEVEL:-INFO}

# Common volume mounts for data persistence
x-common-volumes: &common-volumes
  - ./data:/app/data
  - ./logs:/app/logs

services:
  redis:
    image: redis:7-alpine
    container_name: hn-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  web:
    build: .
    container_name: hn-web
    ports:
      - "${WEB_PORT:-8000}:8000"
    environment: *common-env
    volumes: *common-volumes
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Background task processing services
  worker:
    build: .
    container_name: hn-worker
    command: celery -A app.tasks.celery_app worker --loglevel=${LOG_LEVEL:-info} --concurrency=2
    environment: *common-env
    volumes: *common-volumes
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "app.tasks.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  scheduler:
    build: .
    container_name: hn-scheduler
    command: celery -A app.tasks.celery_app beat --loglevel=${LOG_LEVEL:-info}
    environment: *common-env
    volumes: *common-volumes
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build: .
    container_name: hn-flower
    command: celery -A app.tasks.celery_app flower --port=5555 --broker=${CELERY_BROKER_URL}
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    environment: *common-env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: hacker-news-network
